name: Deploy n8n with PostgreSQL

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'docker-compose*.yml'
      - 'Dockerfile'
      - '.github/workflows/deploy-n8n.yml'

  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  DEPLOYMENT_PATH: /opt/n8n
  COMPOSE_FILE: docker-compose-postgres.yml

jobs:
  deploy:
    name: Deploy n8n Stack
    runs-on: [self-hosted, n8n]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify running as n8n user
        run: |
          echo "Current user: $(whoami)"
          echo "Home directory: $HOME"
          echo "Working directory: $(pwd)"

      - name: Copy docker-compose file
        run: |
          # Copy compose file to deployment directory
          sudo -u n8n cp -f docker-compose-postgres.yml ${{ env.DEPLOYMENT_PATH }}/

          # Ensure proper permissions
          sudo -u n8n chmod 644 ${{ env.DEPLOYMENT_PATH }}/docker-compose-postgres.yml

      - name: Deploy n8n stack
        run: |
          cd ${{ env.DEPLOYMENT_PATH }}

          # Pull latest images
          sudo -u n8n docker-compose -f ${{ env.COMPOSE_FILE }} pull

          # Stop existing containers gracefully
          sudo -u n8n docker-compose -f ${{ env.COMPOSE_FILE }} down --timeout 30

          # Start new containers
          sudo -u n8n docker-compose -f ${{ env.COMPOSE_FILE }} up -d

          # Wait for services to be healthy
          echo "Waiting for services to start..."
          sleep 30

      - name: Health check
        run: |
          cd ${{ env.DEPLOYMENT_PATH }}

          # Check container status
          sudo -u n8n docker-compose -f ${{ env.COMPOSE_FILE }} ps

          # Verify n8n is responding
          max_attempts=10
          attempt=1

          while [ $attempt -le $max_attempts ]; do
            if curl -f http://localhost:5678/healthz; then
              echo "‚úÖ n8n is healthy and responding!"
              break
            else
              echo "Attempt $attempt/$max_attempts: n8n not ready yet..."
              sleep 10
              attempt=$((attempt + 1))
            fi
          done

          if [ $attempt -gt $max_attempts ]; then
            echo "‚ùå n8n health check failed after $max_attempts attempts"
            sudo -u n8n docker-compose -f ${{ env.COMPOSE_FILE }} logs --tail=100 n8n
            exit 1
          fi

      - name: Show deployment logs
        if: always()
        run: |
          cd ${{ env.DEPLOYMENT_PATH }}
          echo "=== Recent n8n logs ==="
          sudo -u n8n docker-compose -f ${{ env.COMPOSE_FILE }} logs --tail=50 n8n

          echo "=== Container status ==="
          sudo -u n8n docker-compose -f ${{ env.COMPOSE_FILE }} ps

      - name: Notify deployment status
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ n8n deployed successfully to ${{ inputs.environment || 'production' }}"
            echo "üåê Access URL: https://n8n.labjp.xyz"
          else
            echo "‚ùå n8n deployment failed"
            echo "Check the logs above for details"
          fi