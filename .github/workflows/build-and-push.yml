name: Build and Push n8n Image

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'docker/**'
      - 'packages/**'
      - 'Dockerfile'
      - '.github/workflows/build-and-push.yml'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/n8n

jobs:
  build-and-push:
    name: Build and Push to GitHub Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/images/n8n/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            N8N_VERSION=latest

      - name: Output image info
        run: |
          echo "‚úÖ Image built and pushed successfully!"
          echo "üì¶ Image tags: ${{ steps.meta.outputs.tags }}"
          echo "üîè Digest: ${{ steps.build.outputs.digest }}"
          echo ""
          echo "üöÄ To use this image:"
          echo "   podman pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

  trigger-deployment:
    name: Trigger Deployment
    needs: build-and-push
    if: success() && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger deployment workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-production-postgres.yml',
              ref: 'master',
              inputs: {
                environment: 'production'
              }
            })